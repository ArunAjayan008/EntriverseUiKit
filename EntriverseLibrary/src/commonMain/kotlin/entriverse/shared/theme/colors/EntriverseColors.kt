package entriverse.shared.theme.colors

import androidx.compose.runtime.Immutable
import androidx.compose.ui.graphics.Color

@Immutable
data class EntriverseColors internal constructor(
    val lightMode: Boolean,
    val referenceColors: ReferenceColors,
    val componentColors: ComponentColors,
)

@Immutable
data class ReferenceColors internal constructor(
    val backgroundDefault: Color,
    val backgroundGrey: Color,
    val blueContainer: Color,
    val blueHover: Color,
    val blueIcon: Color,
    val blueOutline: Color,
    val brownIcon: Color,
    val defaultIcon: Color,
    val disabledIcon: Color,
    val disabledText: Color,
    val entriBlue: Color,
    val fixedBlack: Color,
    val fixedPureBlack: Color,
    val fixedWhite: Color,
    val goldIcon: Color,
    val greenIcon: Color,
    val invertedIcon: Color,
    val invertedText: Color,
    val linkText: Color,
    val linkTextHover: Color,
    val linkTextVisited: Color,
    val onBlue: Color,
    val onBlueContainer: Color,
    val orangeIcon: Color,
    val placeholderIcon: Color,
    val placeholderText: Color,
    val primaryContainer: Color,
    val primaryText: Color,
    val purpleIcon: Color,
    val secondaryContainer: Color,
    val secondaryIcon: Color,
    val subtext: Color,
    val surfaceOutline: Color,
    val surfaceOutlineDisabled: Color,
    val timestampText: Color,
    val yellowIcon: Color,
    val entriGreen: Color,
    val onGreen: Color,
    val greenContainer: Color,
    val onGreenContainer: Color,
    val greenHover: Color,
    val entriPurple: Color,
    val onPurple: Color,
    val purpleContainer: Color,
    val onPurpleContainer: Color,
    val purpleHover: Color,
    val entriOrange: Color,
    val onOrange: Color,
    val orangeContainer: Color,
    val onOrangeContainer: Color,
    val orangeHover: Color,
    val entriYellow: Color,
    val onYellow: Color,
    val yellowContainer: Color,
    val onYellowContainer: Color,
    val yellowHover: Color,
    val entriBrown: Color,
    val onBrown: Color,
    val brownContainer: Color,
    val onBrownContainer: Color,
    val brownHover: Color,
    val entriGold: Color,
    val onGold: Color,
    val goldContainer: Color,
    val onGoldContainer: Color,
    val goldHover: Color,
    val errorColor: Color,
    val onError: Color,
    val errorTextColor: Color,
    val errorOutlineColor: Color,
    val errorContainer: Color,
    val onErrorContainer: Color,
    val errorHover: Color,
    val successColor: Color,
    val onSuccess: Color,
    val successTextColor: Color,
    val successOutlineColor: Color,
    val successContainer: Color,
    val onSuccessContainer: Color,
    val successHover: Color,
)

@Immutable
data class ComponentColors internal constructor(
    val buttonXsDestructiveDefault :Color,
    val buttonXsDestructiveDefaultText:Color,
    val buttonXsDestructiveDefaultIcon: Color,
    val buttonXsDestructiveDisabled: Color,
    val buttonXsDestructiveDisabledText: Color,
    val buttonXsDestructiveDisabledIcon: Color,
    val buttonXsDestructiveHover: Color,
    val buttonXsDestructiveHoverIcon: Color,
    val buttonXsDestructiveFocused: Color,
    val buttonXsDestructiveFocusedText: Color,
    val buttonXsDestructiveFocusedIcon: Color,
    val buttonXsDestructiveFocusedBorder: Color,
    val buttonXsOutlinedBorderDefault: Color,
    val buttonXsOutlinedDefaultText: Color,
    val buttonXsOutlinedDefaultIcon: Color,
    val buttonXsOutlinedBorderDisabled: Color,
    val buttonXsOutlinedDisabledText: Color,
    val buttonXsOutlinedDisabledIcon: Color,
    val buttonXsOutlinedFillHover: Color,
    val buttonXsOutlinedBorderHover: Color,
    val buttonXsOutlinedHoverText: Color,
    val buttonXsOutlinedHoverIcon: Color,
    val buttonXsOutlinedFillFocused: Color,
    val buttonXsOutlinedBorderFocused: Color,
    val buttonXsOutlinedFocusedText: Color,
    val buttonXsOutlinedFocusedIcon: Color,
    val buttonXsSecondaryOutlinedBorderDefault: Color,
    val buttonXsSecondaryOutlinedDefaultText: Color,
    val buttonXsSecondaryOutlinedDefaultIcon: Color,
    val buttonXsSecondaryOutlinedBorderDisabled: Color,
    val buttonXsSecondaryOutlinedDisabledText: Color,
    val buttonXsSecondaryOutlinedDisabledIcon: Color,
    val buttonXsSecondaryOutlinedFillHover: Color,
    val buttonXsSecondaryOutlinedBorderHover: Color,
    val buttonXsSecondaryOutlinedHoverText: Color,
    val buttonXsSecondaryOutlinedHoverIcon: Color,
    val buttonXsSecondaryOutlinedFillFocused: Color,
    val buttonXsSecondaryOutlinedBorderFocused: Color,
    val buttonXsSecondaryOutlinedFocusedText: Color,
    val buttonXsSecondaryOutlinedFocusedIcon: Color,
    val buttonXsSuccessDefault: Color,
    val buttonXsSuccessDefaultText: Color,
    val buttonXsSuccessDefaultIcon: Color,
    val buttonXsSuccessDisabled: Color,
    val buttonXsSuccessDisabledText: Color,
    val buttonXsSuccessDisabledIcon: Color,
    val buttonXsSuccessHover: Color,
    val buttonXsSuccessHoverText: Color,
    val buttonXsSuccessHoverIcon: Color,
    val buttonXsSuccessFocused: Color,
    val buttonXsSuccessFocusedText: Color,
    val buttonXsSuccessFocusedIcon: Color,
    val buttonXsSuccessFocusedBorder: Color,
    val buttonXsTonalDefault: Color,
    val buttonXsTonalDefaultText: Color,
    val buttonXsTonalDefaultIcon: Color,
    val buttonXsTonalDisabled: Color,
    val buttonXsTonalDisabledText: Color,
    val buttonXsTonalDisabledIcon: Color,
    val buttonXsTonalHover: Color,
    val buttonXsTonalHoverText: Color,
    val buttonXsTonalHoverIcon: Color,
    val buttonXsTonalFocused: Color,
    val buttonXsTonalFocusedText: Color,
    val buttonXsTonalFocusedIcon: Color,
    val buttonXsTonalFocusedBorder: Color,
    val buttonXsFilledDefault: Color,




    )